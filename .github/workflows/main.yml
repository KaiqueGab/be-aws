name: pipe
on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        id: checkout # used to identify an step, it should be used to get infos from this step easily
        uses: actions/checkout@v4

      - name: Configure NodeJS
        id: configure-node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        id: install-dependencies
        run: |
          npm ci

      - name: Configure AWS Credentials
        id: configure-aws-credentials # used to identify an step, it should be used to get infos from this step easily
        uses: aws-actions/configure-aws-credentials@v5.0.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Login to AWS ECR
        id: login-ecr # used to identify an step, it should be used to get infos from this step easily
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up Docker Buildx
        id: setup-docker-buildx
        uses: docker/setup-buildx-action@v3

      - name: Generate tag
        id: generate_tag
        run: |
          SHA=$(echo $GITHUB_SHA | head -c7) # Use $GITHUB_SHA to get commit sha, use | head -c7 to get first 7 chars and pass it to SHA (by echo command)
          echo "sha=$SHA" >> $GITHUB_OUTPUT  # Get $SHA value and concat it with sha=, then save it into $GITHUB_OUTPUT to let it available out this step

      - name: Build and Load Image
        id: load-image
        uses: docker/build-push-action@v6
        with:
          context: .
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/${{ vars.ECR_REPOSITORY }}:${{ steps.generate_tag.outputs.sha }}

      - name: Build and Push the Image to AWS ECR
        id: build-push-image
        uses: docker/build-push-action@v6
        with:
          context: .
          cache-from: type=gha
          push: true
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/${{ vars.ECR_REPOSITORY }}:${{ steps.generate_tag.outputs.sha }}

      - name: Render task definition
        id: render-task-definition
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ secrets.ECS_TASK_DEFINITION }}
          container-name: ${{ secrets.CONTAINER_NAME }}
          image: ${{ steps.login-ecr.outputs.registry }}/${{ vars.ECR_REPOSITORY }}:${{ steps.generate_tag.outputs.sha }}

      - name: Deploy Amazon ECS
        id: deploy-amazon-ecs
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: ${{ steps.render-task-definition.outputs.task-definition }}
          service: ${{ secrets.ECS_SERVICE }}
          cluster: ${{ secrets.ECS_CLUSTER }}
          wait-for-service-stability: true
